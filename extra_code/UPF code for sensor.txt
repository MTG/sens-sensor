main.py file ####################################################################################

1) in imports:
### UPF CODE ######
import datetime
import pickle
import glob
import RPi.GPIO as GPIO
GPIO.setwarnings(False)
###################

2) 
networkStatus=True  # CHANGED UPF # findNetwork()
running_stat = True # CHANGED UPF # is_time(exclusionTimes)  # True if the actual time is inside the time slot

3) Inside "try":
### UPF CODE ######
if pm.upf_code:
    # Configure LEDs
    GPIO.setmode(GPIO.BCM) # Set up GPIO mode
    led_pin = 16  # Define GPIO pins for each LED
        #20--> Yellow
        #21--> Red
        #16--> Green
    GPIO.setup(led_pin, GPIO.OUT)

    # Create folder to save audios temporarly. Check if folder exists, and if not, create it
    if not os.path.exists(pm.foldersave):
        os.makedirs(pm.foldersave)
        print(f"Folder created: {pm.foldersave}")
###################

4) Before "vect, vect_truncated, vect_A, Leq_Z, Leq_A=mem.listen_waveread(filewav, recording_time, calib, samplingrate=48000)":
### UPF CODE ######
if pm.upf_code:
    GPIO.output(led_pin, GPIO.HIGH) # Turn LED ON
###################

5) Right after "vect, vect_truncated, vect_A, Leq_Z, Leq_A=mem.listen_waveread(filewav, recording_time, calib, samplingrate=48000)"
### UPF CODE ######
if pm.upf_code:
    GPIO.output(led_pin, GPIO.LOW) # Turn LED OFF

    # Save LEQ_Z level and audio in files of current audio segment
    date_time=datetime.datetime.now()
    print("current date time ", date_time)
    time_str=date_time.strftime("%Y%m%d_%H%M%S")
    file_name="segment_"+time_str
    # Save dB in txt file
    txt_file_path=pm.foldersave + file_name +".txt"
    with open(txt_file_path, "w") as f:
        f.write(f"{Leq_Z}") #FIXME ADD ;{Leq_A} maybe?
    # Save audio in pickle file
    pickle_file_path=pm.foldersave + file_name +".pkl"
    with open(pickle_file_path, "wb") as f:
        audio_wav=vect_truncated*calib/pm.norm_gain
        pickle.dump(audio_wav,f)
    # Check if there are saved files older than specified maintain time (seconds)
    file_pattern="segment_*.pkl"
    files=glob.glob(os.path.join(pm.foldersave, file_pattern))
    files.sort()
    for file in files:
        # Get time stamp of the file
        file_name=file.split("segment_")[1]
        file_date_time=file_name.split(".")[0]
        file_ts=datetime.datetime.strptime(file_date_time, "%Y%m%d_%H%M%S")
        time_difference=(date_time-file_ts).total_seconds()
        if (time_difference>pm.maintain_time):
            #Remove txt and audio file of old audio
            os.remove(file)
            os.remove(file.split('.pkl')[0]+".txt")
###################

#################################################################################################

parameters.py file ##############################################################################

1)
### UPF CODE ######
upf_code=True
foldersave="/home/admin/temporary_audios/"
maintain_time=60 # Time in seconds that we want to preserved stored
norm_gain=6.44 
###################

2)
spl_time = 3 # CHANGED UPF # 15

#################################################################################################